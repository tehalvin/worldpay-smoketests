{
	"info": {
		"_postman_id": "5fbb51a2-c667-4cf1-ac67-1aa5c688feb2",
		"name": "Worldpay",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Purchase",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6b0be033-e1ea-4671-b658-905952c9ad21",
						"type": "text/javascript",
						"exec": [
							"// Generate an ID for the request so that it's unique each time.",
							"function generateOrderId() {",
							"  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
							"    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);",
							"    return v.toString(16);",
							"  });",
							"}",
							"",
							"pm.environment.set(\"orderId\", generateOrderId());"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4587c235-6bbc-4590-91eb-96f1a6764a8a",
						"type": "text/javascript",
						"exec": [
							"console.log(pm.environment.get(\"{{userName}}\"))",
							"console.log(pm.environment.get(\"{{xmlPassword}}\"))",
							"//we need worldpay to give status 200 OK",
							"pm.test(\"response is ok\", function() {",
							"   pm.response.to.have.status(200); ",
							"});",
							"",
							"//convert response to JSON so we can extract the xml",
							"var responseBody = pm.response.text();",
							"var responseJSON = xml2Json(responseBody);",
							"",
							"//check that we have a reference ID",
							"pm.test(\"response has a payload\", function() {",
							"   //var referenceId = responseJSON.reply.orderStatus.id;",
							"   pm.expect(responseJSON.paymentService.reply).to.exist;",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{xmlPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{userName}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "username",
						"value": "",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "text/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE paymentService PUBLIC \"-//Worldpay//DTD Worldpay PaymentService v1//EN\"\n  \"http://dtd.worldpay.com/paymentService_v1.dtd\">\n<paymentService version=\"1.4\" merchantCode=\"VGWPOKUSD\">\n     <submit>\n         <order orderCode=\"{{orderId}}\" installationId=\"{{installationId}}\">\n             <description>100000 Gold Coins ( free $20.00 $weeps cash)</description>\n             <amount currencyCode=\"USD\" exponent=\"2\" value=\"2000\"/>\n             <paymentMethodMask>\n                 <include code=\"ALL\"/>\n             </paymentMethodMask>\n             <shopper>\n                 <shopperEmailAddress>andrei@tchijov.com</shopperEmailAddress>\n                 <authenticatedShopperID>POK-72</authenticatedShopperID>\n             </shopper>\n             <billingAddress>\n                 <address> \n                     <address1>123 Some Street</address1>\n                     <address2></address2>\n                     <address3></address3>\n                     <postalCode>90104</postalCode>\n                     <city>Seattle</city>\n                     <state>WA</state>\n                     <countryCode>US</countryCode>\n                 </address>\n             </billingAddress>\n             <createToken>\n                 <tokenEventReference>72</tokenEventReference>\n                 <tokenReason>POK-72 Token</tokenReason>\n             </createToken>\n         </order>\n     </submit>\n</paymentService>"
				},
				"url": {
					"raw": "{{purchaseURL}}",
					"host": [
						"{{purchaseURL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bankout Request",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9d563936-34ea-4e54-b3ef-6295a3c8871d",
						"type": "text/javascript",
						"exec": [
							"// Generate an ID for the request so that it's unique each time.",
							"function generateUUID() {",
							"  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
							"    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);",
							"    return v.toString(16);",
							"  });",
							"}",
							"",
							"//Generate a random payment amount for the request between 0 and 350",
							"function generatePaymentAmount() {",
							"    return Math.floor((Math.random() * 350) + 1);",
							"}",
							"",
							"//set a purchaseId",
							"pm.environment.set(\"paymentReference\", generateUUID());",
							"pm.environment.set(\"requestReference\", generateUUID());",
							"pm.environment.set(\"paymentAmount\", generatePaymentAmount());"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e62bcd52-8136-4ddd-9cbe-1318f99c0624",
						"type": "text/javascript",
						"exec": [
							"//ensure that the cashout cancellation was created",
							"pm.test(\"request was accepted\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n               xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <soap:Body>\n    <payToBankAccountV3 xmlns=\"http://merchantapi.envoyservices.com\">\n      <auth>\n        <username>pok-mas-api-TEST@vgw.co</username>\n        <password>{{bankoutPassword}}</password>\n      </auth>\n      <requestReference>{{requestReference}}</requestReference>\n      <paymentInstructions>\n        <paymentInstructionV3>\n          <paymentDetails>\n            <countryCode>US</countryCode>\n            <sourceCurrency>USD</sourceCurrency>\n            <sourceAmount>{{paymentAmount}}</sourceAmount>\n            <targetCurrency>USD</targetCurrency>\n            <targetAmount>0</targetAmount>\n            <sourceOrTarget>S</sourceOrTarget>\n            <merchantReference>{{merchantReference}}</merchantReference>\n            <paymentReference>{{paymentReference}}</paymentReference>\n            <email />\n            <mobile />\n            <fastPayment>N</fastPayment>\n          </paymentDetails>\n          <paymentTemplate TemplateID=\"4bbc918f56d9e011b725001ec9e61285\" TemplateType=\"4\" TemplateCurrency=\"USD\" TemplateCountry=\"US\">\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"BankName\" FieldType=\"Input\" Value=\"BANK OF AMERICA\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"CustomerName\" FieldType=\"Input\" Value=\"Marvin Maria\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"BankAccountNumber\" FieldType=\"Input\" Value=\"483067882451\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"BankCode\" FieldType=\"Input\" Value=\"021000322\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"BranchCode\" FieldType=\"Input\" Value=\"\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"SWIFT\" FieldType=\"Input\" Value=\"\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"additionalInfo1\" FieldType=\"Input\" Value=\"\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"AddressLine1\" FieldType=\"Input\" Value=\"294 Webster Ave_ apt. A7\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"AddressLine2\" FieldType=\"Input\" Value=\"\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"City\" FieldType=\"Input\" Value=\"Brooklyn\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"Postcode\" FieldType=\"Input\" Value=\"11230\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"CountryCode\" FieldType=\"Select\" Value=\"US\" />\n            <Row MaxLength=\"0\" MinLength=\"0\" Id=\"DateOfBirth\" FieldType=\"Complex\" Value=\"--\" />\n          </paymentTemplate>\n          <paymentItemId>00000000-0000-0000-0000-000000000000</paymentItemId>\n        </paymentInstructionV3>\n      </paymentInstructions>\n    </payToBankAccountV3>\n  </soap:Body>\n</soap:Envelope>"
				},
				"url": {
					"raw": "https://test.envoytx.com/",
					"protocol": "https",
					"host": [
						"test",
						"envoytx",
						"com"
					],
					"path": [
						""
					]
				},
				"description": "SOAP Bankout API"
			},
			"response": []
		}
	]
}